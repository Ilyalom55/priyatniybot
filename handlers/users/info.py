import emoji
import random

from aiogram.dispatcher.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from handlers.users.eat_choice import eat_list, drinks
from keyboards.inline.choice_buttons import info, info_keyboard, less_info, no_info, all_categories, go_to_videos, eat

from loader import dp, bot

@dp.message_handler(Command("start"))
async def cmd_start(message: Message):
    await bot.send_animation(message.from_user.id, r'https://media.tenor.com/9gNWL-w1CiQAAAAC/–∏—ç—Ç–æ–Ω–µ—à—É—Ç–∫–∞-its-not-a-joke.gif', caption="–ü—Ä–∏–≤–µ—Ç, –º–æ–π –ø—Ä–∏—è—Ç–Ω—ã–π –¥—Ä—É–≥!üíó –ù–∞–∂–º–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—åüëá", reply_markup=info)
    await message.delete()



@dp.callback_query_handler(lambda c: c.data == 'about_me')
async def showing_info(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await call.message.answer("–ú–Ω–µ –ø—Ä–∏—è—Ç–Ω–æ, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –æ–±–æ –º–Ω–µ –ø–æ–±–æ–ª—å—à–µ. –ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
                              reply_markup=info_keyboard)

    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'sticker')
async def process_callback_button3(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_sticker(callback_query.from_user.id, sticker='CAACAgIAAxkBAAEKwrNlVdSmXm4DgI1-RHFpfiQlXps7EQACjRgAAo3xMEjCF6lG7snpVTME')
    await bot.send_message(callback_query.from_user.id, "–ü—Ä–∏–Ω–∏–º–∞–π –º–æ–π –Ω–æ–≤—ã–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è!", reply_markup=do_back())
    await callback_query.message.delete()
def do_back():
    back_button = InlineKeyboardMarkup().add(InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="back"))
    return back_button


@dp.callback_query_handler(lambda c: c.data == 'back')
async def call_back(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º!", reply_markup=less_info)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'go_back')
async def back_to_mess(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–ß—Ç–æ –¥–µ–ª–∞–µ–º –¥–∞–ª—å—à–µ?", reply_markup=no_info)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'video')
async def go_to_video(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–î–∞–≤–∞–π –ø–æ–º–æ–≥—É —Å –≤—ã–±–æ—Ä–æ–º!", reply_markup=go_to_videos)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'categories')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–í—ã–±–∏—Ä–∞–π –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ!", reply_markup=all_categories)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'men_women')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–õ–æ–≤–∏ 3 —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö –≤–∏–¥–µ–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ú—É–∂—Å–∫–æ–µ/–ñ–µ–Ω—Å–∫–æ–µüëª \n https://www.youtube.com/watch?v=gASBs8pRtLU \n https://www.youtube.com/watch?v=4yeWA3lKi-4 \n https://www.youtube.com/watch?v=7n0en0Gc5ZM"  , reply_markup=eat)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'eat_choice')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    to_eat = random.choice(eat_list)
    to_drink = random.choice(drinks)
    await bot.send_animation(call.from_user.id, r'https://media.tenor.com/e7fGXwHc3G8AAAAC/—á—ë—Ç–æ–∂—Ä–∞—Ç—å–∑–∞—Ö–æ—Ç–µ–ª–æ—Å—å-–ø—Ä–∏—è—Ç–Ω—ã–π–∏–ª—å–¥–∞—Ä.gif', caption=f"–ü—Ä–µ–¥–ª–∞–≥–∞—é –≤–∑—è—Ç—å {to_eat} –Ω–∞ –ø–æ—Ö—Ä—É–º–∫–∞—Ç—åüçΩ –∏ {to_drink} –Ω–∞ –∑–∞–ø–∏–≤–æ–Ωüçπ")
