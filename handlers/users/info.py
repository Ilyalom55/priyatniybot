from pytube import Playlist
import random

from aiogram.dispatcher.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from handlers.users.eat_choice import eat_list, drinks
from keyboards.inline.choice_buttons import info, info_keyboard, less_info, no_info, all_categories, go_to_videos, eat, \
    end

from loader import dp, bot

@dp.message_handler(Command("start"))
async def cmd_start(message: Message):
    await bot.send_animation(message.from_user.id, r'https://media.tenor.com/9gNWL-w1CiQAAAAC/–∏—ç—Ç–æ–Ω–µ—à—É—Ç–∫–∞-its-not-a-joke.gif', caption="–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, –º–æ–π –ø—Ä–∏—è—Ç–Ω—ã–π –¥—Ä—É–≥, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!üíó –ù–∞–∂–º–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—åüëá", reply_markup=info)
    await message.delete()



@dp.callback_query_handler(lambda c: c.data == 'about_me')
async def showing_info(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await call.message.answer("–ú–Ω–µ –ø—Ä–∏—è—Ç–Ω–æ, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –æ–±–æ –º–Ω–µ –ø–æ–±–æ–ª—å—à–µ. –ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–æ–∏ —Å–æ—Ü.—Å–µ—Ç–∏ –∏ —Å–∞–π—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –º–µ—Ä—á–µ–º üòé",
                              reply_markup=info_keyboard)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'sticker')
async def process_callback_button3(callback_query: CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    sticker_link = 'https://t.me/addstickers/YGOLOK_SMEHA'
    text_with_sticker = f"–ó–∞–±–∏—Ä–∞–π –º–æ–π –Ω–æ–≤—ã–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ üëâ {sticker_link} –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—èü´∂"
    await bot.send_message(callback_query.from_user.id, text=text_with_sticker, reply_markup=do_back())
    await callback_query.message.delete()
def do_back():
    back_button = InlineKeyboardMarkup().add(InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—èüîô", callback_data="back"))
    return back_button


@dp.callback_query_handler(lambda c: c.data == 'back')
async def call_back(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —É —Ç–µ–±—è –µ—Å—Ç—å –º–æ–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã!\n –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –º–æ–∏—Ö —Å–æ—Ü.—Å–µ—Ç—è—Ö –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É –≤–∏–¥–µ–æ üé¨", reply_markup=less_info)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'go_back')
async def back_to_mess(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–ó–∞–±–∏—Ä–∞–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ –≤–∏–¥–µ–æ üé¨", reply_markup=no_info)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'video')
async def go_to_video(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–ñ–º—è–∫–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏üëá, –Ω—É –∞ —è –ø–æ–º–æ–≥—É —Å –≤—ã–±–æ—Ä–æ–ºü§ó ", reply_markup=go_to_videos)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'categories')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–í—ã–±–∏—Ä–∞–π –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ!", reply_markup=all_categories)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'back_to_choice')
async def back_to_mess(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–í—ã–±–∏—Ä–∞–π –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ!", reply_markup=go_to_videos)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'men_women')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–õ–æ–≤–∏ –≤–∏–¥–µ–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ú—É–∂—Å–∫–æ–µ/–ñ–µ–Ω—Å–∫–æ–µüë´ \n https://www.youtube.com/watch?v=gASBs8pRtLU", reply_markup=eat)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'back_2')
async def back_to_mess(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–í—ã–±–∏—Ä–∞–π –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ!", reply_markup=all_categories)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'pregnant_16')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–õ–æ–≤–∏ –≤–∏–¥–µ–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ë–µ—Ä–µ–º–µ–Ω–Ω–∞ –≤ 16ü§∞ \n https://youtu.be/L24vSR6GfnU?si=xVwBsObytGEHuO-U" , reply_markup=eat)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'married')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–õ–æ–≤–∏ –≤–∏–¥–µ–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –î–∞–≤–∞–π –ø–æ–∂–µ–Ω–∏–º—Å—èüíç \n https://youtu.be/hsoS-9wPlSY?si=2m_-PF8ouDJOwVrc", reply_markup=eat)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'lets_speak')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–õ–æ–≤–∏ –≤–∏–¥–µ–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ü—É—Å—Ç—å –≥–æ–≤–æ—Ä—è—Çüó£ \n https://youtu.be/s1tBO6l7szA?si=tuXNxkDEnCuqrG4a"  , reply_markup=eat)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'pacanki')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–õ–æ–≤–∏ –≤–∏–¥–µ–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ü–∞—Ü–∞–Ω–∫–∏ü§∑ \n https://youtu.be/hhJQMSRZtSY?si=mHe57RwKG88-HGoO"  , reply_markup=eat)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'betray')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–õ–æ–≤–∏ –≤–∏–¥–µ–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ò–∑–º–µ–Ω—ãüíÅ‚Äç‚ôÇÔ∏è \n https://youtu.be/lN-94Z0tEZg?si=EL0GY1Vw8clzEu2E"  , reply_markup=eat)
    await call.message.delete()


@dp.callback_query_handler(lambda c: c.data == 'eat_choice')
async def go_to_categories(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    to_eat = random.choice(eat_list)
    to_drink = random.choice(drinks)
    await bot.send_animation(call.from_user.id, r'https://media.tenor.com/e7fGXwHc3G8AAAAC/—á—ë—Ç–æ–∂—Ä–∞—Ç—å–∑–∞—Ö–æ—Ç–µ–ª–æ—Å—å-–ø—Ä–∏—è—Ç–Ω—ã–π–∏–ª—å–¥–∞—Ä.gif', caption=f"–ü—Ä–µ–¥–ª–∞–≥–∞—é –≤–∑—è—Ç—å {to_eat} –Ω–∞ –ø–æ—Ö—Ä—É–º–∫–∞—Ç—åüçΩ –∏ {to_drink}üçπ", reply_markup=end)


@dp.callback_query_handler(lambda c: c.data == 'back_to_categories')
async def back_to_mess(call: CallbackQuery):
    await bot.answer_callback_query(call.id)
    await bot.send_message(call.from_user.id, "–í—ã–±–∏—Ä–∞–π –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ!", reply_markup=all_categories)
    await call.message.delete()
